name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    strategy:
      matrix:
        # The order of these definition matters for the web output
        # TODO: Test on 32-bit systems
        # TODO: Test on MacOS (our shared library handling on MacOS is broken...), Windows
        mpi: [MPICH, OpenMPI]
        findmpi: [MPIEXEC_EXECUTABLE, MPI_HOME, CMAKE_C_COMPILER]
        mpitrampoline: [2c2c6f0d462c4ff423a87bc72782116a6d1c8dbb]
        mpiwrapper: [185f4812d01f9a9fcc0194c8e7d40a06b81a3348]

    # The CMake configure and build commands are platform agnostic and
    # should work equally well on Windows or Mac. You can convert this
    # to a matrix build if you need cross-platform coverage. See:
    # https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install MPItrampoline
      run: |
        git clone https://github.com/eschnett/MPItrampoline
        cd MPItrampoline
        git checkout ${{matrix.mpitrampoline}}
        cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_INSTALL_PREFIX=$HOME/mpitrampoline
        cmake --build build
        cmake --install build

    - name: Configure
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE`
      # is only required if you are using a single-configuration
      # generator such as make. See
      # https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        case "${{matrix.findmpi}}" in
        MPIEXEC_EXECUTABLE)
            cmake -B ${{github.workspace}}/build \
                -DMPIEXEC_EXECUTABLE=$HOME/mpitrampoline/bin/mpiexec \
                -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                -DCMAKE_INSTALL_PREFIX=$HOME/mpitest
            ;;
        MPI_HOME)
            cmake -B ${{github.workspace}}/build \
                -DMPI_HOME=$HOME/mpitrampoline \
                -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                -DCMAKE_INSTALL_PREFIX=$HOME/mpitest
            ;;
        CMAKE_C_COMPILER)
            cmake -B ${{github.workspace}}/build \
                -DCMAKE_C_COMPILER=$HOME/mpitrampoline/bin/mpicc \
                -DCMAKE_CXX_COMPILER=$HOME/mpitrampoline/bin/mpicxx \
                -DCMAKE_Fortran_COMPILER=$HOME/mpitrampoline/bin/mpifc \
                -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                -DCMAKE_INSTALL_PREFIX=$HOME/mpitest
            ;;
        esac

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration. See
      # https://cmake.org/cmake/help/latest/manual/ctest.1.html for
      # more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Install
      # Install your program
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install mpiwrapper/${{matrix.mpi}}
      run: |
        case "${{matrix.mpi}}" in
            MPICH) packages=libmpich-dev;;
            OpenMPI) packages=libopenmpi-dev;;
        esac
        sudo apt-get install ${packages}
        git clone https://github.com/eschnett/MPIwrapper
        cd MPIwrapper
        git checkout ${{matrix.mpiwrapper}}
        cmake -B ${{github.workspace}}/MPIwrapper/build \
            -DCMAKE_CXX_COMPILER=mpicxx \
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
            -DCMAKE_INSTALL_PREFIX=$HOME/mpiwrapper-${{matrix.mpi}}
        cmake --build ${{github.workspace}}/MPIwrapper/build --config ${{env.BUILD_TYPE}}
        cmake --install ${{github.workspace}}/MPIwrapper/build --config ${{env.BUILD_TYPE}}

    - name: Test C ${{matrix.mpi}}
      run: |
        case "${{matrix.mpi}}" in
            MPICH) mpiexec_options='';;
            OpenMPI) mpiexec_options='--oversubscribe';;
        esac
        export MPITRAMPOLINE_MPIEXEC=$HOME/mpiwrapper-${{matrix.mpi}}/bin/mpiwrapper-mpiexec
        export MPITRAMPOLINE_LIB=$HOME/mpiwrapper-${{matrix.mpi}}/lib/libmpiwrapper.so
        $HOME/mpitrampoline/bin/mpiexec ${mpiexec_options} -n 4 $HOME/mpitest/bin/mpi-test-c

    - name: Test C++ ${{matrix.mpi}}
      run: |
        case "${{matrix.mpi}}" in
            MPICH) mpiexec_options='';;
            OpenMPI) mpiexec_options='--oversubscribe';;
        esac
        export MPITRAMPOLINE_MPIEXEC=$HOME/mpiwrapper-${{matrix.mpi}}/bin/mpiwrapper-mpiexec
        export MPITRAMPOLINE_LIB=$HOME/mpiwrapper-${{matrix.mpi}}/lib/libmpiwrapper.so
        $HOME/mpitrampoline/bin/mpiexec ${mpiexec_options} -n 4 $HOME/mpitest/bin/mpi-test-cxx

    - name: Test Fortran 77 mpif ${{matrix.mpi}}
      run: |
        case "${{matrix.mpi}}" in
            MPICH) mpiexec_options='';;
            OpenMPI) mpiexec_options='--oversubscribe';;
        esac
        export MPITRAMPOLINE_MPIEXEC=$HOME/mpiwrapper-${{matrix.mpi}}/bin/mpiwrapper-mpiexec
        export MPITRAMPOLINE_LIB=$HOME/mpiwrapper-${{matrix.mpi}}/lib/libmpiwrapper.so
        $HOME/mpitrampoline/bin/mpiexec ${mpiexec_options} -n 4 $HOME/mpitest/bin/mpi-test-mpif-f

    - name: Test Fortran 90 mpif ${{matrix.mpi}}
      run: |
        case "${{matrix.mpi}}" in
            MPICH) mpiexec_options='';;
            OpenMPI) mpiexec_options='--oversubscribe';;
        esac
        export MPITRAMPOLINE_MPIEXEC=$HOME/mpiwrapper-${{matrix.mpi}}/bin/mpiwrapper-mpiexec
        export MPITRAMPOLINE_LIB=$HOME/mpiwrapper-${{matrix.mpi}}/lib/libmpiwrapper.so
        $HOME/mpitrampoline/bin/mpiexec ${mpiexec_options} -n 4 $HOME/mpitest/bin/mpi-test-mpif-f90

    - name: Test Fortran 90 mpi ${{matrix.mpi}}
      run: |
        case "${{matrix.mpi}}" in
            MPICH) mpiexec_options='';;
            OpenMPI) mpiexec_options='--oversubscribe';;
        esac
        export MPITRAMPOLINE_MPIEXEC=$HOME/mpiwrapper-${{matrix.mpi}}/bin/mpiwrapper-mpiexec
        export MPITRAMPOLINE_LIB=$HOME/mpiwrapper-${{matrix.mpi}}/lib/libmpiwrapper.so
        $HOME/mpitrampoline/bin/mpiexec ${mpiexec_options} -n 4 $HOME/mpitest/bin/mpi-test-mpi-f90

    - name: Test Fortran 90 mpi_f08 ${{matrix.mpi}}
      run: |
        case "${{matrix.mpi}}" in
            MPICH) mpiexec_options='';;
            OpenMPI) mpiexec_options='--oversubscribe';;
        esac
        export MPITRAMPOLINE_MPIEXEC=$HOME/mpiwrapper-${{matrix.mpi}}/bin/mpiwrapper-mpiexec
        export MPITRAMPOLINE_LIB=$HOME/mpiwrapper-${{matrix.mpi}}/lib/libmpiwrapper.so
        $HOME/mpitrampoline/bin/mpiexec ${mpiexec_options} -n 4 $HOME/mpitest/bin/mpi-test-mpi_f08-f90
